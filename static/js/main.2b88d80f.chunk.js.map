{"version":3,"sources":["components/Message.js","components/TypingMessage.js","components/Response.js","components/TypingResponse.js","components/MessageHistory.js","data/messages.js","App.js","reportWebVitals.js","index.js"],"names":["Message","time","from","text","className","name","class","TypingMessage","style","opacity","Response","TypingResponse","MessageHistory","list","length","secondLastIndex","map","item","index","id","defaultProps","messages","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b88d80f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  from: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nfunction Message({ time, from, text }) {\n  return (\n    <li className=\"clearfix\">\n      <div className=\"message-data align-right\">\n        <span className=\"message-data-time\">{time}</span> &nbsp; &nbsp;\n        <span className=\"message-data-name\">{from.name}</span> &nbsp;\n        <i class=\"fa fa-circle me\"></i>\n      </div>\n      <div className=\"message other-message float-right\">{text}</div>\n    </li>\n  );\n}\n\nMessage.propTypes = propTypes;\n\nexport default Message;\n","import PropTypes from 'prop-types';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  from: PropTypes.object.isRequired,\n};\n\nfunction TypingMessage({ time, from }) {\n  return (\n    <li className=\"clearfix\">\n      <div className=\"message-data align-right\">\n        <span className=\"message-data-time\">{time}</span> &nbsp; &nbsp;\n        <span className=\"message-data-name\">{from.name}</span> &nbsp;\n        <i class=\"fa fa-circle me\"></i>\n        <p>\n          <i class=\"fa fa-circle me\"></i>\n          <i class=\"fa fa-circle me\" style={{ opacity: 0.5 }}></i>\n          <i class=\"fa fa-circle me\" style={{ opacity: 0.25 }}></i>\n        </p>\n      </div>\n    </li>\n  );\n}\n\nTypingMessage.propTypes = propTypes;\n\nexport default TypingMessage;\n","import PropTypes from 'prop-types';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  from: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nfunction Response({ time, from, text }) {\n  return (\n    <li>\n      <div className=\"message-data\">\n        <span className=\"message-data-name\">\n          <i className=\"fa fa-circle online\"></i> {from.name}\n        </span>\n        <span className=\"message-data-time\">{time}</span>\n      </div>\n      <div className=\"message my-message\">{text}</div>\n    </li>\n  );\n}\n\nResponse.propTypes = propTypes;\n\nexport default Response;\n","import PropTypes from 'prop-types';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  from: PropTypes.object.isRequired,\n};\n\nfunction TypingResponse({ time, from }) {\n  return (\n    <li>\n      <div className=\"message-data\">\n        <span className=\"message-data-name\">\n          <i className=\"fa fa-circle online\"></i> {from.name}\n        </span>\n        <span className=\"message-data-time\">{time}</span>\n      </div>\n      <i className=\"fa fa-circle online\"></i>\n      <i className=\"fa fa-circle online\" style={{ opacity: 0.5 }}></i>\n      <i className=\"fa fa-circle online\" style={{ opacity: 0.25 }}></i>\n    </li>\n  );\n}\n\nTypingResponse.propTypes = propTypes;\n\nexport default TypingResponse;\n","import Message from './Message';\nimport TypingMessage  from './TypingMessage';\nimport Response  from './Response';\nimport TypingResponse  from './TypingResponse';\n\nconst defaultProps = {\n  list: [],\n};\n\nfunction MessageHistory({ list }) {\n  if (list.length === 0) {\n    return null;\n  }\n\n  const secondLastIndex = list.length - 2;\n\n  return (\n    <ul>\n      {list.map((item, index) => {\n        if (index < secondLastIndex) {\n          if (index % 2 === 0) {\n            return (\n              <Message\n                key={item.id}\n                id={item.id}\n                time={item.time}\n                from={item.from}\n                text={item.text}\n              />\n            );\n          }\n\n          return (\n            <Response\n              key={item.id}\n              id={item.id}\n              time={item.time}\n              from={item.from}\n              text={item.text}\n            />\n          );\n        }\n\n        if (item.text && index % 2 === 0) {\n          return (\n            <Message\n              key={item.id}\n              id={item.id}\n              time={item.time}\n              from={item.from}\n              text={item.text}\n            />\n          );\n        } else if (item.text) {\n          return (\n            <Response\n              key={item.id}\n              id={item.id}\n              time={item.time}\n              from={item.from}\n              text={item.text}\n            />\n          );\n        }\n\n        if (item.from.name === list[0].from.name) {\n          return (\n            <TypingMessage\n              key={item.id}\n              id={item.id}\n              time={item.time}\n              from={item.from}\n            />\n          );\n        }\n\n        return (\n          <TypingResponse\n            key={item.id}\n            id={item.id}\n            time={item.time}\n            from={item.from}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nMessageHistory.defaultProps = defaultProps;\n\nexport default MessageHistory;\n","const messages = [\n  {\n    id: 'chat-5-1090',\n    from: { name: 'Ольга' },\n    type: 'response',\n    time: '10:10',\n    text: 'Привет, Виктор. Как дела? Как идет работа над проектом?',\n  },\n  {\n    id: 'chat-5-1091',\n    from: { name: 'Виктор' },\n    type: 'message',\n    time: '10:12',\n    text: 'Привет. Давай сегодня созвонимся. Проект практически готов, и у меня есть что показать.',\n  },\n  {\n    id: 'chat-5-1092',\n    from: { name: 'Ольга' },\n    type: 'response',\n    time: '10:14',\n    text: 'Не уверена что сегодня получится. Не все еще в офисе. Давай уточню через час. Возникли ли какие-либо проблемы на последней стадии проекта?',\n  },\n  {\n    id: 'chat-5-1093',\n    from: { name: 'Виктор' },\n    type: 'message',\n    time: '10:20',\n    text: 'Нет, все прошло гладко. Очень хочу показать всё команде.',\n  },\n  {\n    id: 'chat-5-1094',\n    from: { name: 'Виктор' },\n    type: 'typing',\n    time: '10:31',\n  },\n  {\n    id: 'chat-5-1095',\n    from: { name: 'Ольга' },\n    type: 'typing',\n    time: '10:31',\n  },\n];\n\nexport default messages;\n","import './App.css';\nimport MessageHistory from './components/MessageHistory';\nimport messages from './data/messages';\n\nfunction App() {\n  return (\n    <div className=\"clearfix container\">\n      <div className=\"chat\">\n        <div className=\"chat-history\">\n          <MessageHistory list={messages} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}